# coding=utf-8

# URL: https://pymedusa.com
#
# This file is part of Medusa.
#
# Medusa is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Medusa is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Medusa. If not, see <http://www.gnu.org/licenses/>.

"""Custom exceptions used or raised by indexer_api"""

from tvdb_api.tvdb_exceptions import tvdb_exception

indexerExcepts = ["indexer_exception", "indexer_error", "indexer_userabort", "indexer_shownotfound", "indexer_showincomplete",
                  "indexer_seasonnotfound", "indexer_episodenotfound", "indexer_attributenotfound"]

tvdbExcepts = ["tvdb_exception", "tvdb_error", "tvdb_userabort", "tvdb_shownotfound", "tvdb_showincomplete",
               "tvdb_seasonnotfound", "tvdb_episodenotfound", "tvdb_attributenotfound"]


class indexer_exception(tvdb_exception):
    """Any exception generated by indexers api
    """
    pass


class indexer_error(indexer_exception):
    """An error with the indexers api (Cannot connect, for example)
    """
    pass


class indexer_userabort(indexer_exception):
    """User aborted the interactive selection (via
    the q command, ^c etc)
    """
    pass


class indexer_shownotfound(indexer_exception):
    """Show cannot be found in the indexer (non-existant show)
    """
    pass


class indexer_showincomplete(indexer_exception):
    """Show found but incomplete in the indexer (incomplete show)
    """
    pass


class indexer_seasonnotfound(indexer_exception):
    """Season cannot be found in the indexer
    """
    pass


class indexer_episodenotfound(indexer_exception):
    """Episode cannot be found in the indexer
    """
    pass


class indexer_attributenotfound(indexer_exception):
    """Raised if an episode does not have the requested
    attribute (such as a episode name)
    """
    pass
